// Test para debugear los datos del cliente que se env√≠an
const testFormData = {
  name: "Juan P√©rez Test",
  email: "juan.test@email.com", 
  phone: "+59899123456",
  subject: "Problema con mi laptop",
  message: "Mi laptop no enciende y hace ruidos extra√±os",
  priority: "urgent"
};

console.log('üîç DEBUGGING DATOS DEL CLIENTE');
console.log('==============================');
console.log('');

console.log('üì§ DATOS QUE SE ENV√çAN AL SERVIDOR:');
console.log('-----------------------------------');
console.log('Nombre:', testFormData.name);
console.log('Email:', testFormData.email);
console.log('Tel√©fono:', testFormData.phone);
console.log('Asunto:', testFormData.subject);
console.log('Mensaje:', testFormData.message);
console.log('Prioridad:', testFormData.priority);
console.log('');

// Simular el proceso del servidor
console.log('üîÑ PROCESO EN EL SERVIDOR:');
console.log('-------------------------');

// 1. Los datos llegan al API
console.log('1. ‚úÖ Los datos llegan a /api/tickets');
console.log('   body =', JSON.stringify(testFormData, null, 2));

// 2. Se procesan los campos
const { name, email, phone, subject: title, message: description, priority } = testFormData;
console.log('');
console.log('2. ‚úÖ Se extraen los campos:');
console.log('   name =', name);
console.log('   email =', email);
console.log('   phone =', phone);
console.log('   title =', title);
console.log('   description =', description);
console.log('   priority =', priority);

// 3. Se busca/crea el cliente
console.log('');
console.log('3. ‚úÖ Se busca o crea el cliente:');
console.log('   - Se busca cliente con email:', email);
console.log('   - Si no existe, se crea con:');
console.log('     * name:', name);
console.log('     * email:', email);
console.log('     * phone:', phone);

// 4. Se crea el ticket
console.log('');
console.log('4. ‚úÖ Se crea el ticket asociado al cliente');
console.log('   - clientId: [ID del cliente]');
console.log('   - userId: [ID del usuario]');

// 5. Se genera el email
console.log('');
console.log('5. ‚úÖ Se genera el email con datos del ticket que incluye:');
console.log('   - ticket.client.name:', name);
console.log('   - ticket.client.email:', email);
console.log('   - ticket.client.phone:', phone);

console.log('');
console.log('üéØ PUNTOS A VERIFICAR:');
console.log('======================');
console.log('‚úÖ 1. Los datos se env√≠an correctamente desde el formulario');
console.log('‚úÖ 2. El API procesa name, email, phone correctamente');
console.log('‚úÖ 3. Se crea/actualiza el cliente con phone');
console.log('‚úÖ 4. El ticket se asocia al cliente (clientId)');
console.log('‚úÖ 5. El email usa ticket.client.phone en lugar de solo phone');

console.log('');
console.log('‚ö†Ô∏è  POSIBLES PROBLEMAS:');
console.log('======================');
console.log('‚ùì 1. ¬øEl campo phone se est√° enviando vac√≠o desde el formulario?');
console.log('‚ùì 2. ¬øLa validaci√≥n est√° rechazando el tel√©fono?');
console.log('‚ùì 3. ¬øEl cliente se est√° creando sin phone?');
console.log('‚ùì 4. ¬øEl include no est√° trayendo el campo phone del cliente?');
console.log('‚ùì 5. ¬øEl template de email no est√° accediendo a ticket.client.phone?');

console.log('');
console.log('üîß PARA DEBUGEAR:');
console.log('=================');
console.log('1. Agregar console.log en /api/tickets/route.ts despu√©s de const { name, email, phone } = body');
console.log('2. Agregar console.log antes de crear el cliente');
console.log('3. Agregar console.log del ticket creado con client incluido');
console.log('4. Verificar que el template reciba ticket.client.phone');
